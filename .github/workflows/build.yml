name: build
on:
  push:
    branches:
      - main
jobs:
  build:
    if: github.repository_owner == 'IntellectualSites'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
      - name: Clean Build
        run: ./gradlew clean build
      - name: Determine release status
        if: ${{ runner.os == 'Linux' }}
        run: |
          if [ "$(./gradlew properties | awk '/^version:/ { print $2; }' | grep '\-SNAPSHOT')" ]; then
            echo "STATUS=snapshot" >> $GITHUB_ENV
          else
            echo "STATUS=release" >> $GITHUB_ENV
          fi
      - name: Publish Release
        uses: softprops/action-gh-release@v1
        with:
          files: "Core/build/libs/*.jar"
          body: |
            Commit ${{ steps.short_sha.outputs.sha_short }}
            This release is automatically compiled by GitHub Actions
          name: Adyeshach Automation Compile ${{ steps.short_sha.outputs.sha_short }}
          draft: false
          tag_name: commit-${{ steps.short_sha.outputs.sha_short }}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_KEY }}
          GITHUB_REPOSITORY: LangZongz/PlotSquared
      - name: Publish Snapshot
        if: ${{ runner.os == 'Linux' && env.STATUS != 'release' && github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        run: ./gradlew publishToSonatype
        env:
          ORG_GRADLE_PROJECT_sonatypeUsername: ${{ secrets.SONATYPE_USERNAME }}
          ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.SONATYPE_PASSWORD }}
      - name: Publish core javadoc
        if: ${{ runner.os == 'Linux' && env.STATUS == 'release' && github.event_name == 'push' && github.ref == 'refs/heads/main'}}
        uses: cpina/github-action-push-to-another-repository@main
        env:
          SSH_DEPLOY_KEY: ${{ secrets.SSH_DEPLOY_KEY }}
        with:
          source-directory: 'Core/build/docs/javadoc'
          destination-github-username: 'IntellectualSites'
          destination-repository-name: 'plotsquared-javadocs'
          user-email: ${{ secrets.USER_EMAIL }}
          target-branch: main
          target-directory: v7/core
      - name: Publish bukkit javadoc
        if: ${{ runner.os == 'Linux' && env.STATUS == 'release' && github.event_name == 'push' && github.ref == 'refs/heads/main'}}
        uses: cpina/github-action-push-to-another-repository@main
        env:
          SSH_DEPLOY_KEY: ${{ secrets.SSH_DEPLOY_KEY }}
        with:
          source-directory: 'Bukkit/build/docs/javadoc'
          destination-github-username: 'IntellectualSites'
          destination-repository-name: 'plotsquared-javadocs'
          user-email: ${{ secrets.USER_EMAIL }}
          target-branch: main
          target-directory: v7/bukkit
